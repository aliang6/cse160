#BlueJ class context
comment0.params=hz
comment0.target=Animator(double)
comment0.text=\n\ Initialize\ an\ Animator.\n\n\ @param\ hz\ The\ frame\ rate\ in\ Hz.\n
comment1.params=
comment1.target=double\ getFrameRate()
comment1.text=\n\ Accessor\ for\ getting\ the\ frame\ rate.\n\n\ @return\ the\ frame\ rate.\n
comment10.params=
comment10.target=void\ setDone()
comment10.text=\n\ Method\ used\ by\ the\ lower\ levels\ to\ notify\ us\ that\ the\ game\n\ has\ terminated.\n
comment11.params=vec
comment11.target=geometry.Vector2D\ toPixels(geometry.Vector2D)
comment11.text=\n\ Utility\ method\ for\ converting\ model\ to\ pixel\ coordinates,\n\ according\ to\ the\ current\ display\ panel\ size\ and\ resolution.\n\n\ @param\ vec\ 2D\ vector\ to\ be\ converted\ to\ pixel\ coordinates.\n\ @return\ a\ 2D\ vector\ giving\ the\ corresponding\ pixel\ coordinates.\n
comment12.params=seg
comment12.target=geometry.Segment2D\ toPixels(geometry.Segment2D)
comment12.text=\n\ Utility\ method\ for\ converting\ model\ to\ pixel\ coordinates,\n\ according\ to\ the\ current\ display\ panel\ size\ and\ resolution.\n\n\ @param\ seg\ 2D\ segment\ to\ be\ converted\ to\ pixel\ coordinates.\n\ @return\ a\ 2D\ segment\ giving\ the\ corresponding\ pixel\ coordinates.\n
comment13.params=g\ seg
comment13.target=void\ drawSegment(java.awt.Graphics,\ geometry.Segment2D)
comment13.text=\n\ Utility\ method\ for\ drawing\ a\ line\ segment\ according\ to\ the\n\ current\ screen\ size\ and\ resolution.\n\ \n\ @param\ g\ Graphics\ context\ in\ which\ to\ draw.\n\ @param\ seg\ 2D\ segment\ to\ be\ drawn.\n
comment14.params=g\ position\ radius\ startAngle\ stopAngle
comment14.target=void\ drawArc(java.awt.Graphics,\ geometry.Vector2D,\ double,\ double,\ double)
comment14.text=\n\ Utility\ method\ for\ drawing\ a\ circular\ arc\ according\ to\ the\ current\n\ screen\ size\ and\ resolution.\n\ \n\ @param\ g\ Graphics\ context\ in\ which\ to\ draw.\n\ @param\ position\ \ Position\ of\ the\ center\ of\ the\ arc.\n\ @param\ radius\ \ Radius\ of\ the\ arc.\n\ @param\ startAngle\ \ Starting\ angle\ in\ degrees.\n\ @param\ stopAngle\ \ Stopping\ angle\ in\ degrees.\n
comment15.params=
comment15.target=void\ doFrame()
comment15.text=\n\ Main\ animation\ routine.\ \ Called\ to\ periodically\ perform\ physical\n\ simulation\ calculations\ and\ arrange\ for\ the\ display\ to\ be\ updated.\n
comment2.params=
comment2.target=double\ getFrameTime()
comment2.text=\n\ Accessor\ for\ getting\ the\ time\ per\ frame.\n\ \n\ @return\ the\ time\ per\ frame,\ in\ seconds.\n
comment3.params=n
comment3.target=void\ setUpdatesPerFrame(int)
comment3.text=\n\ Mutator\ for\ setting\ the\ update\ rate\ for\ the\ physical\ calculations.\n\n\ @param\ n\ The\ number\ of\ steps\ of\ the\ physical\ simulation\ per\ frame.\n
comment4.params=hz
comment4.target=void\ setFrameRate(double)
comment4.text=\n\ Mutator\ for\ setting\ the\ number\ of\ updates\ per\ frame.\n\n\ @param\ hz\ The\ number\ of\ frames\ per\ second.\n
comment5.params=object
comment5.target=void\ addLiveObject(liveobject.LiveObject)
comment5.text=\n\ Register\ an\ object\ to\ be\ managed\ and\ displayed\ by\ the\ animator.\n\n\ @param\ object\ The\ object\ to\ be\ registered.\n
comment6.params=e
comment6.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment6.text=\n\ Routine\ called\ back\ by\ the\ animation\ timer\ to\ let\ us\ know\ that\n\ it\ is\ time\ to\ update\ the\ simulation.\n
comment7.params=g
comment7.target=void\ paintComponent(java.awt.Graphics)
comment7.text=\n\ Method\ for\ redrawing\ the\ display.\n\n\ @param\ g\ The\ graphics\ context\ used\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ dispose(true);\n\ for\ drawing.\n
comment8.params=
comment8.target=java.util.Iterator\ allLiveObjects()
comment8.text=\n\ Iterator\ for\ enumerating\ all\ live\ objects\ currently\ being\ managed.\n\ This\ is\ useful,\ for\ example,\ so\ that\ an\ object\ can\ check\ whether\n\ it\ has\ collided\ with\ another\ object.\n\n\ @return\ An\ enumeration\ object\ to\ generate\ all\ the\ live\ objects.\n
comment9.params=
comment9.target=double\ getResolution()
comment9.text=\n\ Obtain\ the\ current\ screen\ resolution.\n\n\ @return\ the\ current\ resolution\ in\ pixels\ per\ AU.\n
numComments=16
