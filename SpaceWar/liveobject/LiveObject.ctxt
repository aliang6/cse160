#BlueJ class context
comment0.params=anim
comment0.target=LiveObject(animation.Animator)
comment0.text=\n\ Initialize\ a\ LiveObject.\n\n\ @param\ anim\ The\ animator\ to\ register\ with.\n
comment1.params=dt
comment1.target=void\ update(double)
comment1.text=\n\ Method\ for\ performing\ one\ step\ of\ the\ physical\ simulation\n\ associated\ with\ this\ object.\ \ Subclasses\ may\ override\ to\n\ add\ additional\ calculations.\n\n\ @param\ dt\ The\ amount\ of\ time\ covered\ by\ the\ current\ time\ step.\n
comment10.params=col
comment10.target=void\ setColor(java.awt.Color)
comment10.text=\n\ Mutator\ to\ set\ the\ color\ for\ the\ object.\n\n\ @param\ col\ The\ color\ to\ be\ used\ when\ displaying\ the\ object.\n
comment11.params=t
comment11.target=void\ setLifetime(double)
comment11.text=\n\ Mutator\ to\ set\ the\ lifetime\ for\ the\ object.\n\n\ @param\ t\ The\ remaining\ lifetime\ of\ the\ object.\n
comment12.params=b
comment12.target=void\ setVisible(boolean)
comment12.text=\n\ Mutator\ to\ set\ the\ visibility\ for\ the\ object.\n\ \n\ @param\ b\ true\ if\ the\ object\ is\ to\ be\ visible,\ false\ if\ not.\n
comment13.params=
comment13.target=geometry.Vector2D\ getPosition()
comment13.text=\n\ Accessor\ for\ getting\ the\ current\ position\ of\ the\ object.\n\n\ @return\ The\ current\ position\ of\ the\ object.\n
comment14.params=
comment14.target=geometry.Vector2D\ getVelocity()
comment14.text=\n\ Accessor\ for\ getting\ the\ current\ velocity\ of\ the\ object.\n\n\ @return\ The\ current\ velocity\ of\ the\ object.\n
comment15.params=
comment15.target=geometry.Vector2D\ getAcceleration()
comment15.text=\n\ Accessor\ for\ getting\ the\ current\ acceleration\ of\ the\ object.\n\n\ @return\ The\ current\ acceleration\ of\ the\ object.\n
comment16.params=
comment16.target=geometry.Orientation\ getOrientation()
comment16.text=\n\ Accessor\ for\ getting\ the\ current\ orientation\ of\ the\ object.\n\n\ @return\ The\ current\ orientation\ of\ the\ object.\n
comment17.params=
comment17.target=double\ getRotation()
comment17.text=\n\ Accessor\ for\ getting\ the\ current\ rotational\ speed\ of\ the\ object.\n\ \n\ @return\ The\ current\ rotational\ speed\ of\ the\ object.\n
comment18.params=
comment18.target=java.awt.Color\ getColor()
comment18.text=\n\ Accessor\ for\ getting\ the\ current\ color\ of\ the\ object.\n\ \n\ @return\ The\ current\ color\ of\ the\ object.\n
comment19.params=
comment19.target=double\ getLifetime()
comment19.text=\n\ Accessor\ for\ getting\ the\ current\ lifetime\ of\ the\ object.\n\n\ @return\ The\ current\ lifetime\ of\ the\ object.\n
comment2.params=other
comment2.target=void\ interactWith(LiveObject)
comment2.text=\n\ Method\ for\ handling\ an\ interaction\ with\ another\ live\ object.\n\ Subclasses\ that\ are\ capable\ of\ interaction\ will\ override\ this.\n\ \n\ @param\ other\ \ The\ other\ live\ object\ to\ interact\ with.\n
comment20.params=
comment20.target=boolean\ isTerminated()
comment20.text=\n\ Accessor\ for\ determining\ if\ this\ object\ has\ terminated.\n\ \n\ @return\ true\ if\ this\ object\ has\ terminated,\ false\ otherwise.\n
comment21.params=
comment21.target=boolean\ isVisible()
comment21.text=\n\ Accessor\ for\ determining\ if\ this\ object\ is\ visible.\n\ \n\ @return\ true\ if\ this\ object\ is\ visible,\ false\ otherwise.\n
comment22.params=
comment22.target=void\ setTerminated()
comment22.text=\n\ Flag\ this\ object\ as\ having\ terminated.\n\ Subclasses\ should\ override\ this\ method\ if\ they\ need\ to\ take\ other\n\ actions.\n
comment23.params=g\ segments
comment23.target=void\ drawSegments(java.awt.Graphics,\ geometry.Segment2D[])
comment23.text=\n\ Utility\ method\ for\ drawing\ a\ collection\ of\ segments.\n\ Most\ subclasses\ will\ use\ this\ to\ draw\ themselves.\n\n\ @param\ g\ Graphics\ context\ to\ use\ for\ drawing.\n\ @param\ segments\ Enumeration\ to\ generate\ the\ segments\ to\ draw.\n
comment24.params=extent
comment24.target=void\ setExtent(geometry.Circle2D)
comment24.text=\n\ Mutator\ for\ setting\ the\ extent\ of\ this\ object.\n\ \n\ @param\ extent\ \ The\ extent\ this\ object\ will\ have\ if\ it\ is\n\ currently\ located\ at\ the\ origin.\n
comment25.params=
comment25.target=geometry.Circle2D\ getCurrentExtent()
comment25.text=\n\ Accessor\ for\ getting\ the\ current\ extent\ of\ this\ object.\n\n\ @return\ \ the\ current\ extent\ of\ this\ object,\ if\ this\ object\n\ has\ an\ extent,\ otherwise\ null.\n
comment26.params=other
comment26.target=boolean\ overlaps(LiveObject)
comment26.text=\n\ Method\ for\ checking\ whether\ this\ object\ overlaps\ another\ object.\n\ That\ occurs\ when\ both\ objects\ have\ non-null\ extents,\ and\ the\ extent\ of\n\ this\ object\ overlaps\ the\ extent\ of\ the\ other\ object.\n\n\ @param\ other\ The\ object\ to\ be\ checked\ for\ overlap\ with\ this\ object.\n\ @return\ true\ if\ the\ argument\ object\ overlaps\ this\ object,\n\ and\ false\ otherwise.\n
comment3.params=
comment3.target=boolean\ canInteract()
comment3.text=\n\ Method\ for\ determining\ whether\ another\ object\ can\ interact\n\ with\ this\ object.\ \ Subclasses\ may\ override\ this\ if\ there\n\ are\ certain\ situations\ in\ which\ they\ do\ not\ interact\ with\n\ other\ objects.\n\n\ @return\ true\ if\ this\ object\ can\ interact\ with\ other\ objects,\n\ and\ false\ otherwise.\n
comment4.params=g
comment4.target=void\ draw(java.awt.Graphics)
comment4.text=\n\ Method\ for\ drawing\ the\ object\ onto\ the\ display\ window.\n\ Subclasses\ will\ override\ this\ to\ draw\ themselves\ appropriately.\n\n\ @param\ g\ The\ graphics\ context\ to\ be\ used\ for\ drawing.\n
comment5.params=pos
comment5.target=void\ setPosition(geometry.Vector2D)
comment5.text=\n\ Mutator\ to\ set\ the\ position\ vector\ for\ the\ object.\n\n\ @param\ pos\ The\ vector\ to\ set\ as\ the\ position.\n
comment6.params=vel
comment6.target=void\ setVelocity(geometry.Vector2D)
comment6.text=\n\ Mutator\ to\ set\ the\ velocity\ vector\ for\ the\ object.\n\n\ @param\ vel\ The\ vector\ to\ set\ as\ the\ velocity.\n
comment7.params=acc
comment7.target=void\ setAcceleration(geometry.Vector2D)
comment7.text=\n\ Mutator\ to\ set\ the\ acceleration\ vector\ for\ the\ object.\n\n\ @param\ vel\ The\ vector\ to\ set\ as\ the\ acceleration.\n
comment8.params=orient
comment8.target=void\ setOrientation(geometry.Orientation)
comment8.text=\n\ Mutator\ to\ set\ the\ orientation\ for\ the\ object.\n\n\ @param\ orient\ The\ orientation\ to\ set.\n
comment9.params=rot
comment9.target=void\ setRotation(double)
comment9.text=\n\ Mutator\ to\ set\ the\ rotational\ speed\ for\ the\ object.\n\n\ @param\ rot\ The\ rotational\ speed\ to\ set,\ in\ degrees\ per\ second.\n
numComments=27
