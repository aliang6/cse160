#BlueJ class context
comment0.params=size\ rand
comment0.target=FlippingBitsBoard(int,\ boolean)
comment0.text=\n\ Initialize\ a\ board\ with\ a\ specified\ size\ and\ possibly\n\ a\ random\ configuration.\n\ \n\ @param\ size\ \ The\ dimension\ of\ the\ board.\n\ @param\ rand\ \ If\ true,\ then\ initialize\ the\ board\ to\ a\ random\n\ configuration,\ otherwise\ the\ board\ will\ be\ all\ zeros.\n
comment1.params=toCopy
comment1.target=FlippingBitsBoard(FlippingBitsBoard)
comment1.text=\n\ Copy\ constructor.\n\ Initializes\ a\ FlippingBitsBoard\ with\ the\ same\ size\ and\n\ configuration\ as\ a\ specified\ board.\n\ \n\ @param\ toCopy\ \ The\ board\ to\ copy.\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Create\ a\ string\ representation\ of\ this\ board,\n\ suitable\ for\ printing.\n\ \n\ @return\ a\ string\ representation\ of\ this\ board.\n
comment11.params=label
comment11.target=int\ labelToRow(char)
comment11.text=\n\ Given\ a\ row\ label,\ determine\ the\ corresponding\ row\ number.\n\ \n\ @param\ label\ \ The\ row\ label.\n\ @return\ the\ corresponding\ row\ number,\ or\ -1\ if\ the\ given\n\ label\ is\ not\ a\ valid\ row.\n
comment12.params=row
comment12.target=char\ rowToLabel(int)
comment12.text=\n\ Given\ a\ row\ number,\ determine\ the\ corresponding\ row\ label.\n\ \n\ @param\ row\ \ The\ row\ number.\n\ @return\ \ the\ corresponding\ row\ label,\ or\ 0\ if\ the\ row\n\ number\ is\ invalid.\n
comment13.params=label
comment13.target=int\ labelToCol(char)
comment13.text=\n\ Given\ a\ column\ label,\ determine\ the\ corresponding\ column\ number.\n\ \n\ @param\ label\ \ The\ column\ label.\n\ @return\ the\ corresponding\ column\ number,\ or\ -1\ if\ the\ given\n\ label\ is\ not\ a\ valid\ column.\n
comment14.params=col
comment14.target=char\ colToLabel(int)
comment14.text=\n\ Given\ a\ column\ number,\ determine\ the\ corresponding\ column\ label.\n\ \n\ @param\ col\ The\ column\ number.\n\ @return\ \ the\ corresponding\ column\ label,\ or\ 0\ if\ the\ column\n\ number\ is\ invalid.\n
comment2.params=
comment2.target=int\ getSize()
comment2.text=\n\ Get\ the\ size\ of\ this\ board.\n\ \n\ @return\ the\ size\ of\ this\ board.\n
comment3.params=row\ col
comment3.target=int\ getValue(int,\ int)
comment3.text=\n\ Get\ the\ 0/1\ value\ at\ a\ specified\ position\ in\ this\ board.\n\ \n\ @param\ row\ \ The\ row\ coordinate.\n\ @param\ col\ \ The\ column\ coordinate.\n\ @return\ the\ value\ at\ the\ specified\ row\ and\ column.\n
comment4.params=n
comment4.target=void\ shuffle(int)
comment4.text=\n\ Shuffle\ this\ board\ by\ performing\ a\ random\ sequence\ of\ row\ and\ column\ flips.\n\ \n\ @param\ n\ \ The\ number\ of\ flips\ to\ perform.\n
comment5.params=i
comment5.target=void\ flipRow(int)
comment5.text=\n\ Flip\ a\ row\ of\ this\ board.\n\ \n\ @param\ i\ \ The\ row\ to\ flip.\n
comment6.params=j
comment6.target=void\ flipCol(int)
comment6.text=\n\ Flip\ a\ column\ of\ this\ board.\n\ \n\ @param\ j\ \ The\ column\ to\ flip.\n
comment7.params=other
comment7.target=boolean\ matches(FlippingBitsBoard)
comment7.text=\n\ Determine\ if\ the\ configuration\ of\ this\ board\ matches\n\ the\ configuration\ of\ a\ specified\ other\ board.\n\ \n\ @param\ other\ \ The\ other\ board.\n\ @return\ true\ if\ this\ board\ and\ the\ other\ board\ have\n\ the\ same\ size\ and\ configuration.\n
comment8.params=other
comment8.target=boolean\ equals(java.lang.Object)
comment8.text=\n\ Determine\ if\ this\ board\ equals\ a\ specified\ other\ object.\n\ \n\ @param\ other\ \ The\ other\ object.\n\ @return\ true\ if\ this\ board\ is\ equal\ to\ the\ other\ object,\n\ otherwise\ false.\n
comment9.params=
comment9.target=int\ hashCode()
comment9.text=\n\ Compute\ a\ hashcode\ for\ this\ board.\n\ \n\ @return\ a\ hashcode\ for\ this\ board.\n
numComments=15
